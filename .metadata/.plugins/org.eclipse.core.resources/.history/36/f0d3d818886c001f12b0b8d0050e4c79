package application;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Locale;
import java.util.Scanner;

public class Program {

	public static void main(String[] args) {
		Locale.setDefault(Locale.US);
		Scanner sc = new Scanner(System.in);
		
		System.out.print("Informe o caminho do arquivo.csv: ");
		String caminhoArquivo = sc.nextLine();
		
		// Cria um objeto File para o arquivo CSV
        File arquivoCSV = new File(caminhoArquivo);        
        // Obtém o diretório onde o arquivo CSV está localizado
        String diretorioCSV = arquivoCSV.getParent();        
        // Cria um objeto File para a pasta 'out' no mesmo diretório do arquivo CSV
        File pastaSaida = new File(diretorioCSV, "out");
        
        // Verifica se a pasta 'out' existe; se não, cria
        if (!pastaSaida.exists()) {
            pastaSaida.mkdir();
        }
        
        // Define o caminho para o novo arquivo "summary.csv" dentro da pasta 'out'
        String caminhoNovoArquivo = pastaSaida + File.separator + "summary.csv";
		
        try (BufferedReader br = new BufferedReader(new FileReader(caminhoArquivo));
               BufferedWriter bw = new BufferedWriter(new FileWriter(caminhoNovoArquivo))) {
               
               String linha = br.readLine();
               
               while (linha != null) {
                   String[] dados = linha.split(",");
                   
                   String nome = dados[0];
                   double precoUnitario = Double.parseDouble(dados[1]);
                   int quantidade = Integer.parseInt(dados[2]);                    
                   double valorTotal = precoUnitario * quantidade;
                   
                   // Escreve no arquivo summary.csv
                   bw.write(nome + ", " + String.format("%.2f", valorTotal));
                   bw.newLine();
                   
                   linha = br.readLine();
               }
           }
           catch (IOException e) {
               System.err.println("Erro ao processar os arquivos: " + e.getMessage());
           }
        
        try (BufferedReader br = new BufferedReader(new FileReader(caminhoNovoArquivo))) {
            String linha;
            System.out.println("Conteúdo do arquivo summary.csv:");
            while ((linha = br.readLine()) != null) {
                System.out.println(linha);
            }
        }
        catch (IOException e) {
            System.err.println("Erro ao ler o arquivo summary.csv: " + e.getMessage());
        }
           		
		sc.close();
			

	}

}
